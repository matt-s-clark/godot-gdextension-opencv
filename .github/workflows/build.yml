name: Build GDExtension
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: üêß Linux (GCC)
            os: ubuntu-22.04
            platform: linux
            artifact-name: godot-cpp-linux-glibc2.27-x86_64-release
            artifact-path: bin/libgodot-cpp.linux.template_release.x86_64.a
            run-tests: true
            cache-name: linux-x86_64

        #   - name: üêß Linux (GCC, Double Precision)
        #     os: ubuntu-22.04
        #     platform: linux
        #     artifact-name: godot-cpp-linux-glibc2.27-x86_64-double-release
        #     artifact-path: bin/libgodot-cpp.linux.template_release.double.x86_64.a
        #     flags: precision=double
        #     run-tests: false
        #     cache-name: linux-x86_64-f64

        #   - name: üèÅ Windows (x86_64, MSVC)
        #     os: windows-2019
        #     platform: windows
        #     artifact-name: godot-cpp-windows-msvc2019-x86_64-release
        #     artifact-path: bin/libgodot-cpp.windows.template_release.x86_64.lib
        #     run-tests: false
        #     cache-name: windows-x86_64-msvc

        #   - name: üèÅ Windows (x86_64, MinGW)
        #     os: windows-2019
        #     platform: windows
        #     artifact-name: godot-cpp-linux-mingw-x86_64-release
        #     artifact-path: bin/libgodot-cpp.windows.template_release.x86_64.a
        #     flags: use_mingw=yes
        #     run-tests: false
        #     cache-name: windows-x86_64-mingw

        #   - name: üçé macOS (universal)
        #     os: macos-latest
        #     platform: macos
        #     artifact-name: godot-cpp-macos-universal-release
        #     artifact-path: bin/libgodot-cpp.macos.template_release.universal.a
        #     flags: arch=universal
        #     run-tests: false
        #     cache-name: macos-universal

        #   - name: ü§ñ Android (arm64)
        #     os: ubuntu-22.04
        #     platform: android
        #     artifact-name: godot-cpp-android-arm64-release
        #     artifact-path: bin/libgodot-cpp.android.template_release.arm64.a
        #     flags: arch=arm64
        #     run-tests: false
        #     cache-name: android-arm64

        #   - name: üçè iOS (arm64)
        #     os: macos-latest
        #     platform: ios
        #     artifact-name: godot-cpp-ios-arm64-release
        #     artifact-path: bin/libgodot-cpp.ios.template_release.arm64.a
        #     flags: arch=arm64
        #     run-tests: false
        #     cache-name: ios-arm64

        #   - name: üåê Web (wasm32)
        #     os: ubuntu-22.04
        #     platform: web
        #     artifact-name: godot-cpp-web-wasm32-release
        #     artifact-path: bin/libgodot-cpp.web.template_release.wasm32.a
        #     run-tests: false
        #     cache-name: web-wasm32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup OpenCV
        uses: TralahM/setup-opencv-action@v1.2
        with:
          opencv-version: '4.10.0'
          opencv-extra-modules: true
          install-deps: false
          CMAKE_INSTALL_PREFIX: opt/opencv/

      - name: Restore OpenCV
        uses: actions/cache/restore@v4
        with:
          path: opt/opencv/
          key: opencv4.10-${{ matrix.platform }}

      - name: Install scons
        run: python -m pip install scons==4.0.0

      - name: Update submodule
        run: git submodule update --init
  
      - name: Build godot-cpp (debug)
        run: |
            scons platform=${{ matrix.platform }} disable_exceptions=false verbose=yes target=template_debug ${{ matrix.flags }}

      - name: Build godot-cpp (release)
        run: |
            scons platform=${{ matrix.platform }} disable_exceptions=false verbose=yes target=template_release ${{ matrix.flags }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GDOpenCV-${{ matrix.platform }}
          path: |
            ${{ github.workspace }}/demo/bin/**
  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: GDOpenCV-all
          pattern: GDOpenCV-*
          delete-merged: true
