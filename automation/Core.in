void 	cv::absdiff (InputArray src1, InputArray src2, OutputArray dst)
void 	cv::add (InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray(), int dtype=-1)
void 	cv::addWeighted (InputArray src1, double alpha, InputArray src2, double beta, double gamma, OutputArray dst, int dtype=-1)
void 	cv::bitwise_and (InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray())
void 	cv::bitwise_not (InputArray src, OutputArray dst, InputArray mask=noArray())
void 	cv::bitwise_or (InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray())
void 	cv::bitwise_xor (InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray())
void 	cv::compare (InputArray src1, InputArray src2, OutputArray dst, int cmpop)
void 	cv::convertFp16 (InputArray src, OutputArray dst) 
void 	cv::dct (InputArray src, OutputArray dst, int flags=0)
double 	cv::determinant (InputArray mtx)
void 	cv::dft (InputArray src, OutputArray dst, int flags=0, int nonzeroRows=0) 
void 	cv::exp (InputArray src, OutputArray dst) 
void 	cv::findNonZero (InputArray src, OutputArray idx) 
void 	cv::flip (InputArray src, OutputArray dst, int flipCode)
int 	cv::getOptimalDFTSize (int vecsize)
void 	cv::hconcat (InputArray src1, InputArray src2, OutputArray dst)
void 	cv::idct (InputArray src, OutputArray dst, int flags=0) 
void 	cv::idft (InputArray src, OutputArray dst, int flags=0, int nonzeroRows=0) 
double 	cv::invert (InputArray src, OutputArray dst, int flags=DECOMP_LU) 
void 	cv::log (InputArray src, OutputArray dst) 
void 	cv::max (InputArray src1, InputArray src2, OutputArray dst)
Scalar 	cv::mean (InputArray src, InputArray mask=noArray())
void 	cv::meanStdDev (InputArray src, OutputArray mean, OutputArray stddev, InputArray mask=noArray())
void 	cv::merge (InputArrayOfArrays mv, OutputArray dst)
void 	cv::min (InputArray src1, InputArray src2, OutputArray dst) 
void 	cv::normalize (InputArray src, InputOutputArray dst, double alpha=1, double beta=0, int norm_type=NORM_L2, int dtype=-1, InputArray mask=noArray())
void 	cv::pow (InputArray src, double power, OutputArray dst)
void 	cv::reduce (InputArray src, OutputArray dst, int dim, int rtype, int dtype=-1) 
void 	cv::repeat (InputArray src, int ny, int nx, OutputArray dst)
Mat 	cv::repeat (const Mat &src, int ny, int nx)
void 	cv::rotate (InputArray src, OutputArray dst, int rotateCode)
void 	cv::setIdentity (InputOutputArray mtx, const Scalar &s=Scalar(1))
void 	cv::split (InputArray m, OutputArrayOfArrays mv)
void 	cv::sqrt (InputArray src, OutputArray dst)
void 	cv::subtract (InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray(), int dtype=-1)
void 	cv::transpose (InputArray src, OutputArray dst)
void 	cv::vconcat (InputArray src1, InputArray src2, OutputArray dst)

int 	cv::countNonZero (InputArray src)
void 	cv::flip (InputArray src, OutputArray dst, int flipCode)
double 	cv::invert (InputArray src, OutputArray dst, int flags=DECOMP_LU)
void 	cv::LUT (InputArray src, InputArray lut, OutputArray dst)
Scalar 	cv::mean (InputArray src, InputArray mask=noArray())
void 	cv::merge (InputArrayOfArrays mv, OutputArray dst)
Scalar 	cv::sum (InputArray src)
Scalar 	cv::trace (InputArray mtx)
void 	cv::transform (InputArray src, OutputArray dst, InputArray m)
